---
title: "A Word from The Beegoist"
url: "https://medium.com/@richardeng/a-word-from-the-beegoist-d562ff8589d7"
date_saved: "07/19/2016 22:33-35"
excerpt: "You have some familiarity with the Go language. I highly recommend you follow this Go tutorial.You&#x2019;ve installed Go and Beego on your computer. There are plenty of good online resources to help&hellip;"
thumbnail: [![](png/a_word_from_the_beegoist.png)](png/full/a_word_from_the_beegoist.png)
---
title: "Cheap MapReduce in Go"
url: "http://marcio.io/2015/07/cheap-mapreduce-in-go/"
date_saved: "07/19/2016 22:34-31"
excerpt: "Jul 13, 2015 Here at Malwarebytes we have to deal with a huge amount of data generated by many different systems, malware research teams, telemetry, etc. That data can span for several Terabytes on a&hellip;"
thumbnail: [![](png/cheap_mapreduce_in_go.png)](png/full/cheap_mapreduce_in_go.png)
---
title: "Composable command-line tools"
url: "https://blog.gopheracademy.com/advent-2015/composable-command-line-tools/"
date_saved: "07/19/2016 22:33-49"
excerpt: "Go&#x2019;s simplicity and exhaustive standard library means writing command-line tools is easy and enjoyable. Following the Go philosophy, if you write programs that are small and focussed, you can&hellip;"
thumbnail: [![](png/composable_commandline_tools.png)](png/full/composable_commandline_tools.png)
---
title: Deploying a Simple and Secure Docker Registry
url: https://deis.com/blog/2016/deploying-a-secure-docker-registry/
date_saved: 07/18/2016 04:29-06
excerpt: There comes a time in everybody's life where they realize they have to run their own Docker Registry. Unfortunately there's not a lot of good information on how to run one. Docker's documentation is&hellip;
---
---
title: ES6 Template Literals: Techniques and Tools
url: https://www.sitepoint.com/es6-template-literals-techniques-and-tools/
date_saved: 07/18/2016 04:30-45
excerpt: This article is part of a web development series from Microsoft. Thank you for supporting the partners who make SitePoint possible. JavaScript template literals, new to ES6, provide a powerful new&hellip;
---
---
title: Fatally exiting a command line tool, with grace
url: https://medium.com/@matryer/golang-advent-calendar-day-three-fatally-exiting-a-command-line-tool-with-grace-874befeb64a4
date_saved: 07/18/2016 04:29-48
excerpt: Go is really great for writing command line tools because you can do some pretty powerful things, with very little code.Like C, the `main` function is where the program starts, and when the main&hellip;
---
---
title: "Gitbao"
url: "https://medium.com/@maxmcdonnell/gitbao-bcab6bd15b2b"
date_saved: "07/18/2016 20:23-34"
excerpt: "I participated in Recurse Center (formerly known as Hacker School) at the beginning of this year. One of the more surprising realizations while hacking away was the general hesitation to deploy code&hellip;"
thumbnail: [![](png/gitbao.png)](png/full/gitbao.png)
---
title: "Golang advent calendar: DAY SEVENTEEN — io.Reader in depth"
url: "https://medium.com/@matryer/golang-advent-calendar-day-seventeen-io-reader-in-depth-6f744bb4320b"
date_saved: "07/19/2016 22:34-01"
excerpt: "Single method interfaces end up being extremely powerful — more so than even the language creators thought.This article aims to convince you to use io.Reader in your own code wherever you can.Let’s&hellip;"
thumbnail: [![](png/golang_advent_calendar_day_seventeen_—_ioreader_in_depth.png)](png/full/golang_advent_calendar_day_seventeen_—_ioreader_in_depth.png)
---
title: "Go: Marshal and Unmarshal JSON with time and URL data"
url: "https://ukiahsmith.com/blog/go-marshal-and-unmarshal-json-with-time-and-url-data/?utm_source=golangweekly"
date_saved: "07/19/2016 22:35-05"
excerpt: "Go has a robust JSON library for consuming and outputting JSON. The standard json.Marshal() and json.Unmarshal() functions do a great job of aligning primitive types and converting them from Go into&hellip;"
thumbnail: [![](png/go_marshal_and_unmarshal_json_with_time_and_url_data.png)](png/full/go_marshal_and_unmarshal_json_with_time_and_url_data.png)
---
title: "Go programming for beginner — Map & Function (part 3)"
url: "https://medium.com/@kyawmyintthein/go-programming-for-beginner-map-function-part-3-c374eea78bfe"
date_saved: "07/18/2016 20:23-38"
excerpt: "Map is a collections of key/value pair and also known as an associative array, hash, table and dictionary. Map can look up the value with associated key. Go also support map as built-in type."
thumbnail: [![](png/go_programming_for_beginner_—_map__function_part_3.png)](png/full/go_programming_for_beginner_—_map__function_part_3.png)
---
title: "Go’s march to low-latency GC — Twitch Blog"
url: "https://blog.twitch.tv/gos-march-to-low-latency-gc-a6fa96f06eb7?gi=77c05977f119"
date_saved: "07/19/2016 07:59-31"
excerpt: "We use Go at Twitch for many of our busiest systems. Its simplicity, safety, performance, and readability make it a good tool for the problems we encounter with serving live video and chat to our&hellip;"
thumbnail: [![](png/go’s_march_to_lowlatency_gc_—_twitch_blog.png)](png/full/go’s_march_to_lowlatency_gc_—_twitch_blog.png)
---
title: "Interface Pollution in Go"
url: "https://medium.com/@rakyll/interface-pollution-in-go-7d58bccec275"
date_saved: "07/19/2016 07:59-26"
excerpt: "If there was a single powerful language feature in Go, it&#x2019;d be the interfaces. The internals of Go contain strong combinations of useful ideas from various type systems and inevitably they&hellip;"
thumbnail: [![](png/interface_pollution_in_go.png)](png/full/interface_pollution_in_go.png)
---
title: io.Reader in depth
url: https://medium.com/@matryer/golang-advent-calendar-day-seventeen-io-reader-in-depth-6f744bb4320b
date_saved: 07/18/2016 04:29-37
excerpt: Single method interfaces end up being extremely powerful — more so than even the language creators thought.This article aims to convince you to use io.Reader in your own code wherever you can.Let’s&hellip;
---
---
title: "Json Management Patterns In Go"
url: "http://brandonokert.com/2016/04/18/Json-Management-Patterns-In-Go/?utm_source=golangweekly"
date_saved: "07/19/2016 22:35-20"
excerpt: "Managing Json in Go is not a trivial problem. There are many examples out there of how to decode a simple json document into a struct, but few that answer the questions that inevitably come up: How&hellip;"
thumbnail: [![](png/json_management_patterns_in_go.png)](png/full/json_management_patterns_in_go.png)
---
title: Learn to Create D3.js Data Visualizations by Example
url: https://www.sitepoint.com/d3-js-data-visualizations/
date_saved: 07/18/2016 04:30-55
excerpt: This article was peer reviewed by Michaela Lehr and Tim Severien. Thanks to all of SitePoint&#x2019;s peer reviewers for making SitePoint content the best it can be! D3.js is a JavaScript library for&hellip;
---
---
title: "LogZoom, a fast and lightweight substitute for Logstash"
url: "https://packetzoom.com/blog/logzoom-a-fast-and-lightweight-substitute-for-logstash.html"
date_saved: "07/19/2016 07:58-52"
excerpt: "Date Fri 08 April 2016 By Stan Hu Tags elasticsearch / golang / fluentd / logstash Today, we at PacketZoom are proud to release our open source tool LogZoom, a fast, lightweight, and reliable log&hellip;"
thumbnail: [![](png/logzoom_a_fast_and_lightweight_substitute_for_logstash.png)](png/full/logzoom_a_fast_and_lightweight_substitute_for_logstash.png)
---
title: "Microservices Bliss with Docker and Traefik · Docker Pirates ARMed with explosive stuff"
url: "http://blog.hypriot.com/post/microservices-bliss-with-docker-and-traefik/"
date_saved: "07/19/2016 07:59-41"
excerpt: "Tue, Jun 7, 2016 A couple of weeks ago I found this really nice and neat HTTP reverse proxy called Traefik. It is meant to act as frontend proxy for microservices that are provided by a dynamic&hellip;"
thumbnail: [![](png/microservices_bliss_with_docker_and_traefik_·_docker_pirates_armed_with_explosive_stuff.png)](png/full/microservices_bliss_with_docker_and_traefik_·_docker_pirates_armed_with_explosive_stuff.png)
---
title: Parsing an RSS News Feed with a Bash Script
url: http://www.linuxjournal.com/content/parsing-rss-news-feed-bash-script
date_saved: 07/18/2016 04:27-27
excerpt: I am involved in several free software projects, including one or two where I maintain the website. For one of those projects, we currently are updating the website. Ours is probably similar to other&hellip;
---
---
title: "Persisting Go objects to disk"
url: "https://medium.com/@matryer/golang-advent-calendar-day-eleven-persisting-go-objects-to-disk-7caf1ee3d11d"
date_saved: "07/19/2016 22:33-54"
excerpt: "Today we’re going to write a simple package that lets us save Go objects to disk, and read them back.We’ll expose two main functions:func Save(path string, v interface{}) errorfunc Load(path string,&hellip;"
thumbnail: [![](png/persisting_go_objects_to_disk.png)](png/full/persisting_go_objects_to_disk.png)
---
title: "Practical Golang: Writing a simple login middleware"
url: "https://jacobmartins.com/2016/04/06/practical-golang-writing-a-simple-login-middleware/?utm_source=golangweekly"
date_saved: "07/19/2016 22:35-25"
excerpt: "Introduction In this part we&#x2019;ll be creating a simple middleware you can easily apply to your handlers to get authentication/authorization. Middleware like this is an awesome way to add&hellip;"
thumbnail: [![](png/practical_golang_writing_a_simple_login_middleware.png)](png/full/practical_golang_writing_a_simple_login_middleware.png)
---
title: Production ready MongoDB in Go (for beginners)
url: https://medium.com/@matryer/production-ready-mongodb-in-go-for-beginners-ef6717a77219
date_saved: 07/18/2016 04:30-01
excerpt: In this tutorial, we will build an API in Go that interacts with MongoDB. The code won&#x2019;t be illustrative, and will actually form the basis for a real production ready project.The source code&hellip;
---
---
title: "Resetting a ticker in Go"
url: "https://medium.com/@arpith/resetting-a-ticker-in-go-63858a2c17ec"
date_saved: "07/18/2016 20:23-30"
excerpt: "Raft is the distributed consensus algorithm that I’m using for the database I’m building at the"
thumbnail: [![](png/resetting_a_ticker_in_go.png)](png/full/resetting_a_ticker_in_go.png)
---
title: "Revel Framework Introduction — Quick Mobile"
url: "https://medium.com/quick-mobile/revel-framework-introduction-en-700f83ea0c3b"
date_saved: "07/18/2016 20:23-42"
excerpt: "When I started programming in GO I thought: “Man, it must be very nice to have a web application based on GO”. Then I started to search how to do it. However, as soon as I realized that it was&hellip;"
thumbnail: [![](png/revel_framework_introduction_—_quick_mobile.png)](png/full/revel_framework_introduction_—_quick_mobile.png)
---
title: Routing RESTful controllers
url: https://medium.com/@matryer/golang-advent-calendar-day-five-routing-restful-controllers-edb74e7d4101
date_saved: 07/18/2016 04:29-42
excerpt: When building APIs in Go you usually have the same kinds of mappings for many types of data. In particular, if you’re writing RESTful web services, then you’ll probably want to map GET to read, POST&hellip;
---
---
title: serverless-docker
url: https://github.com/bfirsh/serverless-docker
date_saved: 07/18/2016 04:27-22
excerpt: Swarm makes it incredibly easy to run code on your infrastructure. You wrap some code up inside a Docker container, and Swarm will make it run on whatever free resources you have. But what if those&hellip;
---
---
title: "Singleton Pattern in Go"
url: "http://marcio.io/2015/07/singleton-pattern-in-go/"
date_saved: "07/19/2016 22:34-26"
excerpt: "Jul 12, 2015 The Go Language growth has been phenomenal in the last few years, and is attracting language converts from all walks of life. There has been a lot articles recently about companies&hellip;"
thumbnail: [![](png/singleton_pattern_in_go.png)](png/full/singleton_pattern_in_go.png)
---
title: "Testing in Go from the Ground Up Part 1: The basics of Go testing and Testify"
url: "http://csfortheslothful.blogspot.com/2016/05/testing-in-go-from-ground-up-part-1.html?utm_source=golangweekly"
date_saved: "07/19/2016 22:35-12"
excerpt: "One great language feature of Go is that it has a built-in testing package for writing tests and the command-line tool go test for running them. This means if you want your Go code to have automated&hellip;"
thumbnail: [![](png/testing_in_go_from_the_ground_up_part_1_the_basics_of_go_testing_and_testify.png)](png/full/testing_in_go_from_the_ground_up_part_1_the_basics_of_go_testing_and_testify.png)
---
title: "Tiny abstractions using functions in Go"
url: "https://medium.com/@matryer/tiny-abstractions-using-functions-in-go-39cd7b9a1db2"
date_saved: "07/19/2016 22:33-42"
excerpt: "Sometimes you want to abstract a piece of functionality in your code so that you can swap out implementations, like for test code, or based on some configuration.The traditional way to do this is to&hellip;"
thumbnail: [![](png/tiny_abstractions_using_functions_in_go.png)](png/full/tiny_abstractions_using_functions_in_go.png)
---
title: Ubuntu setup a bonding device and enslave two real Ethernet devices
url: http://www.cyberciti.biz/faq/ubuntu-setup-a-bonding-device-and-enslave-two-real-ethernet-devices/
date_saved: 07/18/2016 04:30-33
excerpt: How do I setup a bonding device bond0 and enslave two real Ethernet (say eth0 and eth2) devices to it on Ubuntu Linux 140.04 or 16.04 LTS server? How can I create 802.3ad bonding mode (IEEE 802.3ad&hellip;
---
---
title: Very basic concurrency for beginners in Go
url: https://medium.com/@matryer/very-basic-concurrency-for-beginners-in-go-663e63c6ba07
date_saved: 07/18/2016 04:29-56
excerpt: Computers can do things very quickly, and if you can make them do many things at the same time, jobs get finished even sooner. Modern computers have processors with many cores, and spreading load&hellip;
---
---
title: "Why Go’s structs are superior to class-based inheritance"
url: "https://medium.com/@simplyianm/why-gos-structs-are-superior-to-class-based-inheritance-b661ba897c67"
date_saved: "07/19/2016 22:34-41"
excerpt: "Go is unique from a lot of object-oriented languages in that it doesn’t have classes. Instead, Go has two awesome features that make its model of polymorphism way more powerful than classical&hellip;"
thumbnail: [![](png/why_go’s_structs_are_superior_to_classbased_inheritance.png)](png/full/why_go’s_structs_are_superior_to_classbased_inheritance.png)
---
title: Your OpenStreetMap server in 120GB
url: http://thinkonbytes.blogspot.com/2016/07/your-openstreetmap-server-in-120gb.html
date_saved: 07/18/2016 04:30-26
excerpt: 1. Install Ubuntu 14.04 server. Remember to enable the firewall: costales@maps:~$ sudo ufw allow http costales@maps:~$ sudo ufw allow ssh costales@maps:~$ sudo ufw enable 2. Check that you have all&hellip;
---
